/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface KeywordClickLog {
  createdAt: Generated<Timestamp>;
  id: Generated<number>;
  keyword: string;
}

export interface SearchResult {
  createdAt: Generated<Timestamp>;
  id: Generated<number>;
  keyword: string;
  model: string;
  result: Json | null;
}

export interface DB {
  KeywordClickLog: KeywordClickLog;
  SearchResult: SearchResult;
}
